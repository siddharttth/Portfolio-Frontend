{"ast":null,"code":"var _jsxFileName = \"D:\\\\Buildd\\\\siddharthfun\\\\Portfolio-Frontend\\\\Portfolio-Frontend\\\\src\\\\components\\\\SlidingPuzzleGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './SlidingPuzzleGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Puzzle = () => {\n  _s();\n  const initialTiles = Array.from({\n    length: 15\n  }, (_, i) => i + 1).concat(null);\n  const [tiles, setTiles] = useState(initialTiles);\n  useEffect(() => {\n    setTiles(shuffle([...tiles]));\n  }, []);\n  const shuffle = arr => arr.sort(() => Math.random() - 0.5);\n  const handleTileClick = index => {\n    const emptyIndex = tiles.indexOf(null);\n    const validMoves = [emptyIndex - 1, emptyIndex + 1, emptyIndex - 4, emptyIndex + 4];\n    if (validMoves.includes(index)) {\n      const newTiles = [...tiles];\n      newTiles[emptyIndex] = newTiles[index];\n      newTiles[index] = null;\n      setTiles(newTiles);\n    }\n  };\n  const resetGame = () => {\n    setTiles(shuffle(initialTiles));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"puzzle-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sliding Puzzle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"puzzle-grid\",\n      children: tiles.map((tile, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `puzzle-tile ${tile ? 'filled' : 'empty'}`,\n        onClick: () => handleTileClick(index),\n        children: tile\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Puzzle, \"fAEo44Bu7X41f43E1n+RnU65pEQ=\");\n_c = Puzzle;\nexport default Puzzle;\nvar _c;\n$RefreshReg$(_c, \"Puzzle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Puzzle","_s","initialTiles","Array","from","length","_","i","concat","tiles","setTiles","shuffle","arr","sort","Math","random","handleTileClick","index","emptyIndex","indexOf","validMoves","includes","newTiles","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tile","onClick","_c","$RefreshReg$"],"sources":["D:/Buildd/siddharthfun/Portfolio-Frontend/Portfolio-Frontend/src/components/SlidingPuzzleGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './SlidingPuzzleGame.css';\n\nconst Puzzle = () => {\n  const initialTiles = Array.from({ length: 15 }, (_, i) => i + 1).concat(null);\n  const [tiles, setTiles] = useState(initialTiles);\n\n  useEffect(() => {\n    setTiles(shuffle([...tiles]));\n  }, []);\n\n  const shuffle = (arr) => arr.sort(() => Math.random() - 0.5);\n\n  const handleTileClick = (index) => {\n    const emptyIndex = tiles.indexOf(null);\n    const validMoves = [emptyIndex - 1, emptyIndex + 1, emptyIndex - 4, emptyIndex + 4];\n    if (validMoves.includes(index)) {\n      const newTiles = [...tiles];\n      newTiles[emptyIndex] = newTiles[index];\n      newTiles[index] = null;\n      setTiles(newTiles);\n    }\n  };\n\n  const resetGame = () => {\n    setTiles(shuffle(initialTiles));\n  };\n\n  return (\n    <div className=\"puzzle-game\">\n      <h2>Sliding Puzzle</h2>\n      <div className=\"puzzle-grid\">\n        {tiles.map((tile, index) => (\n          <div\n            key={index}\n            className={`puzzle-tile ${tile ? 'filled' : 'empty'}`}\n            onClick={() => handleTileClick(index)}\n          >\n            {tile}\n          </div>\n        ))}\n      </div>\n      <button onClick={resetGame}>Restart</button>\n    </div>\n  );\n};\n\nexport default Puzzle;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,YAAY,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,IAAI,CAAC;EAC7E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACM,YAAY,CAAC;EAEhDL,SAAS,CAAC,MAAM;IACda,QAAQ,CAACC,OAAO,CAAC,CAAC,GAAGF,KAAK,CAAC,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,OAAO,GAAIC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;EAE5D,MAAMC,eAAe,GAAIC,KAAK,IAAK;IACjC,MAAMC,UAAU,GAAGT,KAAK,CAACU,OAAO,CAAC,IAAI,CAAC;IACtC,MAAMC,UAAU,GAAG,CAACF,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAG,CAAC,CAAC;IACnF,IAAIE,UAAU,CAACC,QAAQ,CAACJ,KAAK,CAAC,EAAE;MAC9B,MAAMK,QAAQ,GAAG,CAAC,GAAGb,KAAK,CAAC;MAC3Ba,QAAQ,CAACJ,UAAU,CAAC,GAAGI,QAAQ,CAACL,KAAK,CAAC;MACtCK,QAAQ,CAACL,KAAK,CAAC,GAAG,IAAI;MACtBP,QAAQ,CAACY,QAAQ,CAAC;IACpB;EACF,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBb,QAAQ,CAACC,OAAO,CAACT,YAAY,CAAC,CAAC;EACjC,CAAC;EAED,oBACEH,OAAA;IAAKyB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1B1B,OAAA;MAAA0B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB9B,OAAA;MAAKyB,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBhB,KAAK,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAEd,KAAK,kBACrBlB,OAAA;QAEEyB,SAAS,EAAE,eAAeO,IAAI,GAAG,QAAQ,GAAG,OAAO,EAAG;QACtDC,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAACC,KAAK,CAAE;QAAAQ,QAAA,EAErCM;MAAI,GAJAd,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN9B,OAAA;MAAQiC,OAAO,EAAET,SAAU;MAAAE,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA1CID,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AA4CZ,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}