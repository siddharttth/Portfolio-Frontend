{"ast":null,"code":"import React,{useState,useEffect}from'react';import{endpoints}from'../config';import{motion}from'framer-motion';import{useNavigate}from'react-router-dom';import'./Games.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Games=()=>{const[games,setGames]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const navigate=useNavigate();useEffect(()=>{fetchGames();},[]);const fetchGames=async()=>{try{const response=await fetch(endpoints.games);if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const data=await response.json();setGames(data);}catch(error){console.error('Error fetching games:',error);setError('Failed to load games. Please try again later.');}finally{setLoading(false);}};const startGame=gameId=>{navigate(`/game/${gameId}`);// Navigate to the specific game route\n};const containerVariants={hidden:{opacity:0},visible:{opacity:1,transition:{staggerChildren:0.1}}};const itemVariants={hidden:{y:20,opacity:0},visible:{y:0,opacity:1}};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"games-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading exciting games...\"})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"games-error\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Oops!\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"retry-button\",onClick:fetchGames,children:\"Try Again\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"games-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"games-title\",children:\"Games\"}),/*#__PURE__*/_jsx(\"p\",{className:\"games-subtitle\",children:\"Choose your game and start playing!\"}),/*#__PURE__*/_jsx(motion.div,{className:\"games-grid\",variants:containerVariants,initial:\"hidden\",animate:\"visible\",children:games.map(game=>/*#__PURE__*/_jsxs(motion.div,{className:\"game-card\",variants:itemVariants,onClick:()=>startGame(game.id),children:[/*#__PURE__*/_jsx(\"div\",{className:\"game-header\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"game-title\",children:game.name})}),/*#__PURE__*/_jsx(\"p\",{className:\"game-description\",children:game.description}),/*#__PURE__*/_jsx(\"h3\",{className:\"rules-title\",children:\"Rules:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"rules-list\",children:game.rules.map((rule,index)=>/*#__PURE__*/_jsx(\"li\",{children:rule},index))}),/*#__PURE__*/_jsx(\"button\",{className:\"play-button\",onClick:e=>{e.stopPropagation();startGame(game.id);// Redirects to the game\n},children:\"Play Now\"})]},game.id))}),games.length===0&&!loading&&!error&&/*#__PURE__*/_jsx(\"div\",{className:\"no-games\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No games available at the moment. Check back soon!\"})})]});};export default Games;","map":{"version":3,"names":["React","useState","useEffect","endpoints","motion","useNavigate","jsx","_jsx","jsxs","_jsxs","Games","games","setGames","loading","setLoading","error","setError","navigate","fetchGames","response","fetch","ok","Error","status","data","json","console","startGame","gameId","containerVariants","hidden","opacity","visible","transition","staggerChildren","itemVariants","y","className","children","onClick","div","variants","initial","animate","map","game","id","name","description","rules","rule","index","e","stopPropagation","length"],"sources":["D:/Buildd/siddharthfun/Portfolio-Frontend/Portfolio-Frontend/src/components/Games.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { endpoints } from '../config';\nimport { motion } from 'framer-motion';\nimport { useNavigate } from 'react-router-dom';\nimport './Games.css';\n\nconst Games = () => {\n  const [games, setGames] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchGames();\n  }, []);\n\n  const fetchGames = async () => {\n    try {\n      const response = await fetch(endpoints.games);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setGames(data);\n    } catch (error) {\n      console.error('Error fetching games:', error);\n      setError('Failed to load games. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const startGame = (gameId) => {\n    navigate(`/game/${gameId}`); // Navigate to the specific game route\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { y: 20, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"games-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading exciting games...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"games-error\">\n        <h2>Oops!</h2>\n        <p>{error}</p>\n        <button className=\"retry-button\" onClick={fetchGames}>Try Again</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"games-container\">\n      <h1 className=\"games-title\">Games</h1>\n      <p className=\"games-subtitle\">Choose your game and start playing!</p>\n      <motion.div\n        className=\"games-grid\"\n        variants={containerVariants}\n        initial=\"hidden\"\n        animate=\"visible\"\n      >\n        {games.map((game) => (\n          <motion.div\n            className=\"game-card\"\n            key={game.id}\n            variants={itemVariants}\n            onClick={() => startGame(game.id)}\n          >\n            <div className=\"game-header\">\n              <h2 className=\"game-title\">{game.name}</h2>\n            </div>\n            <p className=\"game-description\">{game.description}</p>\n            <h3 className=\"rules-title\">Rules:</h3>\n            <ul className=\"rules-list\">\n              {game.rules.map((rule, index) => (\n                <li key={index}>{rule}</li>\n              ))}\n            </ul>\n            <button className=\"play-button\" onClick={(e) => {\n              e.stopPropagation();\n              startGame(game.id); // Redirects to the game\n            }}>\n              Play Now\n            </button>\n          </motion.div>\n        ))}\n      </motion.div>\n      {games.length === 0 && !loading && !error && (\n        <div className=\"no-games\">\n          <p>No games available at the moment. Check back soon!</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Games;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}