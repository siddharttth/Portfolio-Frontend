{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import'./MemoryMatchGame.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Memory=()=>{const[cards,setCards]=useState([]);const[flippedCards,setFlippedCards]=useState([]);const[matchedCards,setMatchedCards]=useState([]);const[moves,setMoves]=useState(0);const[isAnimating,setIsAnimating]=useState(false);const[scale,setScale]=useState(1);// Responsive scaling\nuseEffect(()=>{const updateScale=()=>{const width=window.innerWidth;if(width<=320)setScale(0.6);else if(width<=375)setScale(0.7);else if(width<=425)setScale(0.8);else if(width<=768)setScale(0.9);else setScale(1);};updateScale();window.addEventListener('resize',updateScale);return()=>window.removeEventListener('resize',updateScale);},[]);useEffect(()=>{const cardSymbols=['🐶','🐱','🦊','🐸','🐰','🐻','🐼','🐨'];const shuffledCards=[...cardSymbols,...cardSymbols].sort(()=>Math.random()-0.5).map((symbol,index)=>({id:index,symbol,flipped:false}));setCards(shuffledCards);},[]);const handleCardClick=useCallback(index=>{if(isAnimating||flippedCards.length===2||flippedCards.includes(index)||matchedCards.includes(index))return;const newFlipped=[...flippedCards,index];setFlippedCards(newFlipped);if(newFlipped.length===2){setIsAnimating(true);setMoves(moves+1);const[firstCard,secondCard]=newFlipped;if(cards[firstCard].symbol===cards[secondCard].symbol){setTimeout(()=>{setMatchedCards(prev=>[...prev,firstCard,secondCard]);setFlippedCards([]);setIsAnimating(false);},800);}else{setTimeout(()=>{setFlippedCards([]);setIsAnimating(false);},1200);}}},[isAnimating,flippedCards,matchedCards,cards,moves]);return/*#__PURE__*/_jsxs(\"div\",{className:\"memory-game\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"game-title\",children:\"Memory Match\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"moves-counter\",children:[\"Moves: \",moves]}),/*#__PURE__*/_jsx(\"div\",{className:\"memory-grid\",style:{transform:`scale(${scale})`,marginTop:scale<1?'2rem':'0'},children:cards.map((card,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"memory-card-container\",onClick:()=>handleCardClick(index),children:/*#__PURE__*/_jsxs(\"div\",{className:`memory-card ${flippedCards.includes(index)||matchedCards.includes(index)?'flipped':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"memory-card-front\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"card-content\",children:\"?\"}),/*#__PURE__*/_jsx(\"div\",{className:\"card-reflection\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"memory-card-back\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"card-content\",children:card.symbol}),/*#__PURE__*/_jsx(\"div\",{className:\"card-reflection\"})]})]})},index))}),matchedCards.length===cards.length&&/*#__PURE__*/_jsxs(\"div\",{className:\"victory-message\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Congratulations! \\uD83C\\uDF89\"}),/*#__PURE__*/_jsx(\"button\",{className:\"restart-button\",onClick:()=>window.location.reload(),children:\"Play Again\"})]})]});};export default Memory;","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsx","_jsx","jsxs","_jsxs","Memory","cards","setCards","flippedCards","setFlippedCards","matchedCards","setMatchedCards","moves","setMoves","isAnimating","setIsAnimating","scale","setScale","updateScale","width","window","innerWidth","addEventListener","removeEventListener","cardSymbols","shuffledCards","sort","Math","random","map","symbol","index","id","flipped","handleCardClick","length","includes","newFlipped","firstCard","secondCard","setTimeout","prev","className","children","style","transform","marginTop","card","onClick","location","reload"],"sources":["D:/Buildd/siddharthfun/Portfolio-Frontend/Portfolio-Frontend/src/components/MemoryMatchGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './MemoryMatchGame.css';\n\nconst Memory = () => {\n  const [cards, setCards] = useState([]);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matchedCards, setMatchedCards] = useState([]);\n  const [moves, setMoves] = useState(0);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [scale, setScale] = useState(1);\n\n  // Responsive scaling\n  useEffect(() => {\n    const updateScale = () => {\n      const width = window.innerWidth;\n      if (width <= 320) setScale(0.6);\n      else if (width <= 375) setScale(0.7);\n      else if (width <= 425) setScale(0.8);\n      else if (width <= 768) setScale(0.9);\n      else setScale(1);\n    };\n\n    updateScale();\n    window.addEventListener('resize', updateScale);\n    return () => window.removeEventListener('resize', updateScale);\n  }, []);\n\n  useEffect(() => {\n    const cardSymbols = ['🐶', '🐱', '🦊', '🐸', '🐰', '🐻', '🐼', '🐨'];\n    const shuffledCards = [...cardSymbols, ...cardSymbols]\n      .sort(() => Math.random() - 0.5)\n      .map((symbol, index) => ({ id: index, symbol, flipped: false }));\n    setCards(shuffledCards);\n  }, []);\n\n  const handleCardClick = useCallback((index) => {\n    if (isAnimating || flippedCards.length === 2 || flippedCards.includes(index) || matchedCards.includes(index)) return;\n\n    const newFlipped = [...flippedCards, index];\n    setFlippedCards(newFlipped);\n\n    if (newFlipped.length === 2) {\n      setIsAnimating(true);\n      setMoves(moves + 1);\n      const [firstCard, secondCard] = newFlipped;\n      \n      if (cards[firstCard].symbol === cards[secondCard].symbol) {\n        setTimeout(() => {\n          setMatchedCards(prev => [...prev, firstCard, secondCard]);\n          setFlippedCards([]);\n          setIsAnimating(false);\n        }, 800);\n      } else {\n        setTimeout(() => {\n          setFlippedCards([]);\n          setIsAnimating(false);\n        }, 1200);\n      }\n    }\n  }, [isAnimating, flippedCards, matchedCards, cards, moves]);\n\n  return (\n    <div className=\"memory-game\">\n      <h2 className=\"game-title\">Memory Match</h2>\n      <p className=\"moves-counter\">Moves: {moves}</p>\n      <div \n        className=\"memory-grid\"\n        style={{\n          transform: `scale(${scale})`,\n          marginTop: scale < 1 ? '2rem' : '0'\n        }}\n      >\n        {cards.map((card, index) => (\n          <div\n            key={index}\n            className=\"memory-card-container\"\n            onClick={() => handleCardClick(index)}\n          >\n            <div className={`memory-card ${(flippedCards.includes(index) || matchedCards.includes(index)) ? 'flipped' : ''}`}>\n              <div className=\"memory-card-front\">\n                <span className=\"card-content\">?</span>\n                <div className=\"card-reflection\"></div>\n              </div>\n              <div className=\"memory-card-back\">\n                <span className=\"card-content\">{card.symbol}</span>\n                <div className=\"card-reflection\"></div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      {matchedCards.length === cards.length && (\n        <div className=\"victory-message\">\n          <p>Congratulations! 🎉</p>\n          <button className=\"restart-button\" onClick={() => window.location.reload()}>\n            Play Again\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Memory;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}