{"ast":null,"code":"var _jsxFileName = \"D:\\\\Buildd\\\\siddharthfun\\\\Portfolio-Frontend\\\\Portfolio-Frontend\\\\src\\\\components\\\\MemoryMatchGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './MemoryMatchGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Memory = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matchedCards, setMatchedCards] = useState([]);\n  const [moves, setMoves] = useState(0);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [scale, setScale] = useState(1);\n\n  // Responsive scaling\n  useEffect(() => {\n    const updateScale = () => {\n      const width = window.innerWidth;\n      if (width <= 320) setScale(0.6);else if (width <= 375) setScale(0.7);else if (width <= 425) setScale(0.8);else if (width <= 768) setScale(0.9);else setScale(1);\n    };\n    updateScale();\n    window.addEventListener('resize', updateScale);\n    return () => window.removeEventListener('resize', updateScale);\n  }, []);\n  useEffect(() => {\n    const cardSymbols = ['🐶', '🐱', '🦊', '🐸', '🐰', '🐻', '🐼', '🐨'];\n    const shuffledCards = [...cardSymbols, ...cardSymbols].sort(() => Math.random() - 0.5).map((symbol, index) => ({\n      id: index,\n      symbol,\n      flipped: false\n    }));\n    setCards(shuffledCards);\n  }, []);\n  const handleCardClick = useCallback(index => {\n    if (isAnimating || flippedCards.length === 2 || flippedCards.includes(index) || matchedCards.includes(index)) return;\n    const newFlipped = [...flippedCards, index];\n    setFlippedCards(newFlipped);\n    if (newFlipped.length === 2) {\n      setIsAnimating(true);\n      setMoves(moves + 1);\n      const [firstCard, secondCard] = newFlipped;\n      if (cards[firstCard].symbol === cards[secondCard].symbol) {\n        setTimeout(() => {\n          setMatchedCards(prev => [...prev, firstCard, secondCard]);\n          setFlippedCards([]);\n          setIsAnimating(false);\n        }, 800);\n      } else {\n        setTimeout(() => {\n          setFlippedCards([]);\n          setIsAnimating(false);\n        }, 1200);\n      }\n    }\n  }, [isAnimating, flippedCards, matchedCards, cards, moves]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"game-title\",\n      children: \"Memory Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"moves-counter\",\n      children: [\"Moves: \", moves]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memory-grid\",\n      style: {\n        transform: `scale(${scale})`,\n        marginTop: scale < 1 ? '2rem' : '0'\n      },\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-card-container\",\n        onClick: () => handleCardClick(index),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `memory-card ${flippedCards.includes(index) || matchedCards.includes(index) ? 'flipped' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"memory-card-front\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-content\",\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-reflection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"memory-card-back\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-content\",\n              children: card.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-reflection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), matchedCards.length === cards.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"victory-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Congratulations! \\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"restart-button\",\n        onClick: () => window.location.reload(),\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Memory, \"8kz/3+3BA3vAGEbSuWLGrYrv3rM=\");\n_c = Memory;\nexport default Memory;\nvar _c;\n$RefreshReg$(_c, \"Memory\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","Memory","_s","cards","setCards","flippedCards","setFlippedCards","matchedCards","setMatchedCards","moves","setMoves","isAnimating","setIsAnimating","scale","setScale","updateScale","width","window","innerWidth","addEventListener","removeEventListener","cardSymbols","shuffledCards","sort","Math","random","map","symbol","index","id","flipped","handleCardClick","length","includes","newFlipped","firstCard","secondCard","setTimeout","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","transform","marginTop","card","onClick","location","reload","_c","$RefreshReg$"],"sources":["D:/Buildd/siddharthfun/Portfolio-Frontend/Portfolio-Frontend/src/components/MemoryMatchGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './MemoryMatchGame.css';\n\nconst Memory = () => {\n  const [cards, setCards] = useState([]);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matchedCards, setMatchedCards] = useState([]);\n  const [moves, setMoves] = useState(0);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [scale, setScale] = useState(1);\n\n  // Responsive scaling\n  useEffect(() => {\n    const updateScale = () => {\n      const width = window.innerWidth;\n      if (width <= 320) setScale(0.6);\n      else if (width <= 375) setScale(0.7);\n      else if (width <= 425) setScale(0.8);\n      else if (width <= 768) setScale(0.9);\n      else setScale(1);\n    };\n\n    updateScale();\n    window.addEventListener('resize', updateScale);\n    return () => window.removeEventListener('resize', updateScale);\n  }, []);\n\n  useEffect(() => {\n    const cardSymbols = ['🐶', '🐱', '🦊', '🐸', '🐰', '🐻', '🐼', '🐨'];\n    const shuffledCards = [...cardSymbols, ...cardSymbols]\n      .sort(() => Math.random() - 0.5)\n      .map((symbol, index) => ({ id: index, symbol, flipped: false }));\n    setCards(shuffledCards);\n  }, []);\n\n  const handleCardClick = useCallback((index) => {\n    if (isAnimating || flippedCards.length === 2 || flippedCards.includes(index) || matchedCards.includes(index)) return;\n\n    const newFlipped = [...flippedCards, index];\n    setFlippedCards(newFlipped);\n\n    if (newFlipped.length === 2) {\n      setIsAnimating(true);\n      setMoves(moves + 1);\n      const [firstCard, secondCard] = newFlipped;\n      \n      if (cards[firstCard].symbol === cards[secondCard].symbol) {\n        setTimeout(() => {\n          setMatchedCards(prev => [...prev, firstCard, secondCard]);\n          setFlippedCards([]);\n          setIsAnimating(false);\n        }, 800);\n      } else {\n        setTimeout(() => {\n          setFlippedCards([]);\n          setIsAnimating(false);\n        }, 1200);\n      }\n    }\n  }, [isAnimating, flippedCards, matchedCards, cards, moves]);\n\n  return (\n    <div className=\"memory-game\">\n      <h2 className=\"game-title\">Memory Match</h2>\n      <p className=\"moves-counter\">Moves: {moves}</p>\n      <div \n        className=\"memory-grid\"\n        style={{\n          transform: `scale(${scale})`,\n          marginTop: scale < 1 ? '2rem' : '0'\n        }}\n      >\n        {cards.map((card, index) => (\n          <div\n            key={index}\n            className=\"memory-card-container\"\n            onClick={() => handleCardClick(index)}\n          >\n            <div className={`memory-card ${(flippedCards.includes(index) || matchedCards.includes(index)) ? 'flipped' : ''}`}>\n              <div className=\"memory-card-front\">\n                <span className=\"card-content\">?</span>\n                <div className=\"card-reflection\"></div>\n              </div>\n              <div className=\"memory-card-back\">\n                <span className=\"card-content\">{card.symbol}</span>\n                <div className=\"card-reflection\"></div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      {matchedCards.length === cards.length && (\n        <div className=\"victory-message\">\n          <p>Congratulations! 🎉</p>\n          <button className=\"restart-button\" onClick={() => window.location.reload()}>\n            Play Again\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Memory;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}